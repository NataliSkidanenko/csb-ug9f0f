{"version":3,"sources":["data.js","components/Task/Task.jsx","components/Form/Form.jsx","App.js","index.js"],"names":["data","id","task","isDone","Task","handlerClick","onClick","className","Form","handlerButton","input","useRef","ref","type","name","placeholder","e","preventDefault","current","value","App","useState","toDo","setToDo","list","toggleStatus","useCallback","newData","map","addNewTask","newTask","length","trim","scrollDown","scrollTop","scrollHeight","rootElement","document","getElementById","createRoot","render"],"mappings":"uNAQeA,EARF,CACX,CAAEC,GAAI,IAAKC,KAAM,gBAAiBC,QAAQ,GAC1C,CAAEF,GAAI,IAAKC,KAAM,mBAAoBC,QAAQ,GAC7C,CAAEF,GAAI,IAAKC,KAAM,6BAA8BC,QAAQ,GACvD,CAAEF,GAAI,IAAKC,KAAM,YAAaC,QAAQ,GACtC,CAAEF,GAAI,IAAKC,KAAM,uBAAwBC,QAAQ,I,eCFpC,SAASC,EAAK,GAAqC,IAAnCH,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQE,EAAY,EAAZA,aAC/C,OACE,oBACEC,QAAS,kBAAMD,EAAaJ,EAAG,EAC/BM,UAAWJ,EAAS,YAAc,OAAO,SAEzC,mBAAGI,UAAU,OAAM,SAAEL,KAG3B,C,MCTe,SAASM,EAAK,GAAoB,IAAlBC,EAAa,EAAbA,cACvBC,EAAQC,mBAEd,OACE,uBAAMJ,UAAU,OAAM,UACpB,uBACEK,IAAKF,EACLH,UAAU,aACVM,KAAK,OACLC,KAAK,OACLC,YAAY,wBAEd,wBACET,QAAS,SAACU,GAER,OADAA,EAAEC,iBACKR,EAAcC,EAAMQ,QAAQC,MACrC,EACAZ,UAAU,aAAY,SACvB,qBAKP,C,MCpBe,SAASa,IACtB,MAAwBC,mBAASrB,GAAK,mBAA/BsB,EAAI,KAAEC,EAAO,KACdC,EAAOb,mBAEPc,EAAeC,uBACnB,SAACzB,GACC,IAAM0B,EAAUL,EAAKM,KAAI,SAAC1B,GAIxB,OAHIA,EAAKD,KAAOA,IACdC,EAAKC,QAAUD,EAAKC,QAEfD,CACT,IACAqB,EAAQI,EACV,GACA,CAACL,IAGGO,EAAaH,uBACjB,SAACxB,GACC,IAAM4B,EAAU,CAAE7B,GAAIqB,EAAKS,OAAQ7B,KAAMA,EAAMC,QAAQ,GACnDD,EAAK8B,QACPT,GAAQ,SAACD,GAAI,4BAASA,GAAI,CAAEQ,GAAU,GAE1C,GACA,CAACR,IAGGW,EAAaP,uBAAY,WAC7BF,EAAKN,QAAQgB,UAAYV,EAAKN,QAAQiB,YACxC,GAAG,IAEH,OACE,qBAAK5B,UAAU,MAAK,SAClB,qBAAKA,UAAU,UAAS,SACtB,sBAAKA,UAAU,YAAW,UACxB,oBAAIA,UAAU,QAAO,SAAC,eACtB,qBAAIK,IAAKY,EAAMjB,UAAU,OAAM,UAC5Be,EAAKS,OAAS,GACbT,EAAKM,KAAI,gBAAG3B,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAM,OAC1B,cAAC,EAAI,CAEHF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRE,aAAcoB,GAJTxB,EAKL,IAELqB,EAAKS,QAAU,GACd,wBAAQzB,QAAS2B,EAAY1B,UAAU,SAAQ,SAAC,mBAKpD,cAAC,EAAI,CAACE,cAAeoB,UAK/B,CC3DA,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACpB,EAAG,M","file":"static/js/main.1b9da4d9.chunk.js","sourcesContent":["const data = [\n  { id: \"0\", task: \"Buy Groceries\", isDone: false },\n  { id: \"1\", task: \"Dinner with Kate\", isDone: true },\n  { id: \"2\", task: \"Create light and dark mode\", isDone: true },\n  { id: \"3\", task: \"Pay bills\", isDone: false },\n  { id: \"4\", task: \"Outings with friends\", isDone: false }\n];\n\nexport default data;\n","import React from \"react\";\nimport \"./Task.css\";\n\nexport default function Task({ id, task, isDone, handlerClick }) {\n  return (\n    <li\n      onClick={() => handlerClick(id)}\n      className={isDone ? \"task done\" : \"task\"}\n    >\n      <p className=\"text\">{task}</p>\n    </li>\n  );\n}\n","import React, { useRef } from \"react\";\nimport \"./Form.css\";\n\nexport default function Form({ handlerButton }) {\n  const input = useRef();\n\n  return (\n    <form className=\"form\">\n      <input\n        ref={input}\n        className=\"task-input\"\n        type=\"text\"\n        name=\"task\"\n        placeholder=\"Enter your new task\"\n      />\n      <button\n        onClick={(e) => {\n          e.preventDefault();\n          return handlerButton(input.current.value);\n        }}\n        className=\"add-button\"\n      >\n        Add a new task\n      </button>\n    </form>\n  );\n}\n","import React, { useCallback, useRef, useState } from \"react\";\nimport data from \"./data\";\nimport Task from \"./components/Task/Task\";\nimport Form from \"./components/Form/Form\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [toDo, setToDo] = useState(data);\n  const list = useRef();\n\n  const toggleStatus = useCallback(\n    (id) => {\n      const newData = toDo.map((task) => {\n        if (task.id === id) {\n          task.isDone = !task.isDone;\n        }\n        return task;\n      });\n      setToDo(newData);\n    },\n    [toDo]\n  );\n\n  const addNewTask = useCallback(\n    (task) => {\n      const newTask = { id: toDo.length, task: task, isDone: false };\n      if (task.trim()) {\n        setToDo((toDo) => [...toDo, newTask]);\n      }\n    },\n    [toDo]\n  );\n\n  const scrollDown = useCallback(() => {\n    list.current.scrollTop = list.current.scrollHeight;\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <h1 className=\"title\">Need to do</h1>\n          <ul ref={list} className=\"list\">\n            {toDo.length > 0 &&\n              toDo.map(({ id, task, isDone }) => (\n                <Task\n                  key={id}\n                  id={id}\n                  task={task}\n                  isDone={isDone}\n                  handlerClick={toggleStatus}\n                />\n              ))}\n            {toDo.length >= 5 && (\n              <button onClick={scrollDown} className=\"scroll\">\n                Scroll down\n              </button>\n            )}\n          </ul>\n          <Form handlerButton={addNewTask} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}